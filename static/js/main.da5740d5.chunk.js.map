{"version":3,"sources":["index.js"],"names":["scaleNames","c","f","BoilingVerdict","props","celsius","toCelsius","fahrenheit","toFahrenheit","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","TemperatureInput","handleChange","bind","e","this","onTemperatureChange","target","value","scale","onChange","React","Component","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState","ReactDOM","render","document","getElementById"],"mappings":"6OAIMA,G,MAAa,CACjBC,EAAG,UACHC,EAAG,eAGL,SAASC,EAAeC,GACtB,OAAIA,EAAMC,SAAW,IACZ,qDAEF,yDAGT,SAASC,EAAUC,GACjB,OAA2B,GAAnBA,EAAa,IAAU,EAGjC,SAASC,EAAaH,GACpB,OAAkB,EAAVA,EAAc,EAAK,GAG7B,SAASI,EAAWC,EAAaC,GAC/B,IAAMC,EAAQC,WAAWH,GACzB,GAAII,OAAOC,MAAMH,GACf,MAAO,GAET,IAAMI,EAASL,EAAQC,GAEvB,OADgBK,KAAKC,MAAe,IAATF,GAAiB,KAC7BG,W,IAGXC,E,kDACJ,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,yDAKNC,GACXC,KAAKpB,MAAMqB,oBAAoBF,EAAEG,OAAOC,S,+BAIxC,IAAMjB,EAAcc,KAAKpB,MAAMM,YACzBkB,EAAQJ,KAAKpB,MAAMwB,MACzB,OACE,kCACE,wDAA8B5B,EAAW4B,GAAzC,KACA,2BACED,MAAOjB,EACPmB,SAAUL,KAAKH,oB,GAlBMS,IAAMC,WAwB/BC,E,kDACJ,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IACC6B,oBAAsB,EAAKA,oBAAoBX,KAAzB,gBAC3B,EAAKY,uBAAyB,EAAKA,uBAAuBZ,KAA5B,gBAC9B,EAAKa,MAAQ,CAACzB,YAAa,GAAIkB,MAAO,KAJvB,E,gEAOClB,GAClBc,KAAKY,SAAS,CAACR,MAAO,IAAKlB,kB,6CAGNA,GACrBc,KAAKY,SAAS,CAACR,MAAO,IAAKlB,kB,+BAI3B,IAAMkB,EAAQJ,KAAKW,MAAMP,MACnBlB,EAAcc,KAAKW,MAAMzB,YACzBL,EAAoB,MAAVuB,EAAgBnB,EAAWC,EAAaJ,GAAaI,EAC/DH,EAAuB,MAAVqB,EAAgBnB,EAAWC,EAAaF,GAAgBE,EAE3E,OACE,6BACE,kBAACU,EAAD,CACEQ,MAAM,IACNlB,YAAaL,EACboB,oBAAqBD,KAAKS,sBAC5B,kBAACb,EAAD,CACEQ,MAAM,IACNlB,YAAaH,EACbkB,oBAAqBD,KAAKU,yBAC5B,kBAAC/B,EAAD,CACEE,QAASQ,WAAWR,U,GAjCLyB,IAAMC,WAuC/BM,IAASC,OACP,kBAACN,EAAD,MACAO,SAASC,eAAe,W","file":"static/js/main.da5740d5.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return <p>The water would boild.</p>;\n  }\n  return <p>The water would not boild.</p>;\n}\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32 ;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\n        <input\n          value={temperature}\n          onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}\n\nclass Calculator extends React.Component { \n  constructor(props) {\n    super(props);\n      this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n      this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n      this.state = {temperature: '', scale: 'c'};\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({scale: 'c', temperature});\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({scale: 'f', temperature});\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature ;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n      <div>\n        <TemperatureInput \n          scale=\"c\"\n          temperature={celsius}\n          onTemperatureChange={this.handleCelsiusChange} />\n        <TemperatureInput \n          scale=\"f\"\n          temperature={fahrenheit}\n          onTemperatureChange={this.handleFahrenheitChange} />\n        <BoilingVerdict\n          celsius={parseFloat(celsius)} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Calculator />,\n  document.getElementById('root')\n);"],"sourceRoot":""}